{"version":3,"sources":["index.js"],"names":["rootElement","document","getElementById","CardProfile","state","index","currentTime","musicList","name","author","img","audio","duration","pause","changeCurrentTime","e","playerRef","playheadWidth","timelineRef","offsetWidth","offsetWidht","offsetLeft","userClickWidhtInPercent","clientX","playheadRef","style","width","hoverTimeLine","hoverPlayheadRef","time","dataset","content","formatTime","resetTimeLine","timeUpdate","playPercent","parseInt","setState","minutes","Math","floor","seconds","updatePlayer","currentSong","Audio","load","nextSong","length","play","prevSong","playOrPause","clickAudio","key","this","addEventListener","removeEventListener","className","ref","src","type","id","onClick","map","music","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.caad2a2b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nclass CardProfile extends React.Component {\n  state = {\n    index: 1,\n    currentTime: \"0:00\",\n    musicList: [\n      {\n        name: \"Sky junior\",\n        author: \"My music\",\n        img: \"https://www.bensound.com/bensound-img/slowmotion.jpg\",\n        audio:\n          \"https://www.bensound.com/bensound-music/bensound-slowmotion.mp3\",\n        duration: \"3:26\"\n      },\n      {\n        name: \"SkyMap\",\n        author: \"My music\",\n        img: \"https://i.ytimg.com/vi/dW2vDEXFitk/maxresdefault.jpg\",\n        audio:\n          \"https://www.bensound.com/bensound-music/bensound-betterdays.mp3\",\n        duration: \"2:24\"\n      },\n      {\n        name: \"Earth\",\n        author: \"My music\",\n        img: \"https://www.bensound.com/bensound-img/newdawn.jpg\",\n        audio: \"https://www.bensound.com/bensound-music/bensound-newdawn.mp3\",\n        duration: \"5:13\"\n      },\n      {\n        name: \"Creative\",\n        author: \"My music\",\n        img:\n          \"https://st.depositphotos.com/1001201/3982/i/950/depositphotos_39824265-stock-photo-bulding-a-new-creative-idea.jpg\",\n        audio:\n          \"https://storage2.lightaudio.ru/7adb420/3d7d2e3391/Benjamin%20Tissot%20â€”%20Creative%20Minds.mp3\",\n        duration: \"2:27\"\n      }\n    ],\n    pause: false\n  };\n\n  componentDidMount() {\n    this.playerRef.addEventListener(\"timeupdate\", this.timeUpdate, false);\n    this.playerRef.addEventListener(\"ended\", this.nextSong, false);\n    this.timelineRef.addEventListener(\"click\", this.changeCurrentTime, false);\n    this.timelineRef.addEventListener(\"mousemove\", this.hoverTimeLine, false);\n    this.timelineRef.addEventListener(\"mouseout\", this.resetTimeLine, false);\n  }\n\n  componentWillUnmount() {\n    this.playerRef.removeEventListener(\"timeupdate\", this.timeUpdate);\n    this.playerRef.removeEventListener(\"ended\", this.nextSong);\n    this.timelineRef.removeEventListener(\"click\", this.changeCurrentTime);\n    this.timelineRef.removeEventListener(\"mousemove\", this.hoverTimeLine);\n    this.timelineRef.removeEventListener(\"mouseout\", this.resetTimeLine);\n  }\n\n  changeCurrentTime = (e) => {\n    const duration = this.playerRef.duration;\n\n    const playheadWidth = this.timelineRef.offsetWidth;\n    const offsetWidht = this.timelineRef.offsetLeft;\n    const userClickWidht = e.clientX - offsetWidht;\n\n    const userClickWidhtInPercent = (userClickWidht * 100) / playheadWidth;\n\n    this.playheadRef.style.width = userClickWidhtInPercent + \"%\";\n    this.playerRef.currentTime = (duration * userClickWidhtInPercent) / 100;\n  };\n\n  hoverTimeLine = (e) => {\n    const duration = this.playerRef.duration;\n\n    const playheadWidth = this.timelineRef.offsetWidth;\n\n    const offsetWidht = this.timelineRef.offsetLeft;\n    const userClickWidht = e.clientX - offsetWidht;\n    const userClickWidhtInPercent = (userClickWidht * 100) / playheadWidth;\n\n    if (userClickWidhtInPercent <= 100) {\n      this.hoverPlayheadRef.style.width = userClickWidhtInPercent + \"%\";\n    }\n\n    const time = (duration * userClickWidhtInPercent) / 100;\n\n    if (time >= 0 && time <= duration) {\n      this.hoverPlayheadRef.dataset.content = this.formatTime(time);\n    }\n  };\n\n  resetTimeLine = () => {\n    this.hoverPlayheadRef.style.width = 0;\n  };\n\n  timeUpdate = () => {\n    const duration = this.playerRef.duration;\n    const timelineWidth =\n      this.timelineRef.offsetWidth - this.playheadRef.offsetWidth;\n    const playPercent = 100 * (this.playerRef.currentTime / duration);\n    this.playheadRef.style.width = playPercent + \"%\";\n    const currentTime = this.formatTime(parseInt(this.playerRef.currentTime));\n    this.setState({\n      currentTime\n    });\n  };\n\n  formatTime = (currentTime) => {\n    const minutes = Math.floor(currentTime / 60);\n    let seconds = Math.floor(currentTime % 60);\n\n    seconds = seconds >= 10 ? seconds : \"0\" + (seconds % 60);\n\n    const formatTime = minutes + \":\" + seconds;\n\n    return formatTime;\n  };\n\n  updatePlayer = () => {\n    const { musicList, index } = this.state;\n    const currentSong = musicList[index];\n    const audio = new Audio(currentSong.audio);\n    this.playerRef.load();\n  };\n\n  nextSong = () => {\n    const { musicList, index, pause } = this.state;\n\n    this.setState({\n      index: (index + 1) % musicList.length\n    });\n    this.updatePlayer();\n    if (pause) {\n      this.playerRef.play();\n    }\n  };\n\n  prevSong = () => {\n    const { musicList, index, pause } = this.state;\n\n    this.setState({\n      index: (index + musicList.length - 1) % musicList.length\n    });\n    this.updatePlayer();\n    if (pause) {\n      this.playerRef.play();\n    }\n  };\n\n  playOrPause = () => {\n    const { musicList, index, pause } = this.state;\n    const currentSong = musicList[index];\n    const audio = new Audio(currentSong.audio);\n    if (!this.state.pause) {\n      this.playerRef.play();\n    } else {\n      this.playerRef.pause();\n    }\n    this.setState({\n      pause: !pause\n    });\n  };\n\n  clickAudio = (key) => {\n    const { pause } = this.state;\n\n    this.setState({\n      index: key\n    });\n\n    this.updatePlayer();\n    if (pause) {\n      this.playerRef.play();\n    }\n  };\n\n  render() {\n    const { musicList, index, currentTime, pause } = this.state;\n    const currentSong = musicList[index];\n    return (\n      <div className=\"card\">\n        <div className=\"current-song\">\n          <audio ref={(ref) => (this.playerRef = ref)}>\n            <source src={currentSong.audio} type=\"audio/ogg\" />\n            Your browser does not support the audio element.\n          </audio>\n          <div className=\"img-wrap\">\n            <img src={currentSong.img} />\n          </div>\n          <span className=\"song-name\">{currentSong.name}</span>\n          <span className=\"song-autor\">{currentSong.author}</span>\n\n          <div className=\"time\">\n            <div className=\"current-time\">{currentTime}</div>\n            <div className=\"end-time\">{currentSong.duration}</div>\n          </div>\n\n          <div ref={(ref) => (this.timelineRef = ref)} id=\"timeline\">\n            <div ref={(ref) => (this.playheadRef = ref)} id=\"playhead\"></div>\n            <div\n              ref={(ref) => (this.hoverPlayheadRef = ref)}\n              className=\"hover-playhead\"\n              data-content=\"0:00\"\n            ></div>\n          </div>\n\n          <div className=\"controls\">\n            <button\n              onClick={this.prevSong}\n              className=\"prev prev-next current-btn\"\n            >\n              <i className=\"fas fa-backward\"></i>\n            </button>\n\n            <button onClick={this.playOrPause} className=\"play current-btn\">\n              {!pause ? (\n                <i className=\"fas fa-play\"></i>\n              ) : (\n                <i className=\"fas fa-pause\"></i>\n              )}\n            </button>\n            <button\n              onClick={this.nextSong}\n              className=\"next prev-next current-btn\"\n            >\n              <i className=\"fas fa-forward\"></i>\n            </button>\n          </div>\n        </div>\n        <div className=\"play-list\">\n          {musicList.map((music, key = 0) => (\n            <div\n              key={key}\n              onClick={() => this.clickAudio(key)}\n              className={\n                \"track \" +\n                (index === key && !pause ? \"current-audio\" : \"\") +\n                (index === key && pause ? \"play-now\" : \"\")\n              }\n            >\n              <img className=\"track-img\" src={music.img} />\n              <div className=\"track-discr\">\n                <span className=\"track-name\">{music.name}</span>\n                <span className=\"track-author\">{music.author}</span>\n              </div>\n              <span className=\"track-duration\">\n                {index === key ? currentTime : music.duration}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<CardProfile />, rootElement);\n"],"sourceRoot":""}